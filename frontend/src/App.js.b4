import React, { Component } from 'react';
// import "bootstrap/dist/css/bootstrap.css";
import "bootswatch/sandstone/bootstrap.css";
import './App.css';
import { Navbar, NavItem, Nav, Grid, Row, Col } from "react-bootstrap";
// let request = require('request');

const PLACES = [
  {name: 'The Mission', zip: '94110'},
  {name: 'FIDI', zip: '94111'},
  {name: 'San Jose', zip: '94088'}
];

class WeatherDisplay extends Component {
  constructor () {
    super();
    this.state = { weatherData: null };
  }
  componentDidMount () {
    const zip = this.props.zip;
    console.log(zip);
    const URL = 'http://api.openweathermap.org/data/2.5/weather?q=' + zip + '&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial';
    fetch(URL).then(res => res.json()).then(json => {
      this.setState({ weatherData: json });
    });
  }
  render () {
    const weatherData = this.state.weatherData;
    if (!weatherData) return <div>Let me pull this up... One moment please</div>;
    const weather = weatherData.weather[0];
    const iconURL = 'http://openweathermap.org/img/w/' + weather.icon + '.png';
    return (
      <div>
        <h1>
          Current weather in {weatherData.name}
          <img src={iconURL} alt={weatherData.description} />
        </h1>
        <h3> Temperature is {weatherData.main.temp}째</h3>
        <p> Today: high {weatherData.main.temp_max}째 / low {weatherData.main.temp_min}째 </p>
        <p> Wind: {weatherData.wind.speed} mph at {weatherData.wind.deg}째 </p>
      </div>
    );
  }
}

class App extends Component {
  constructor () {
    super();
    this.state = { activePlace: 0 };
  }
  render () {
    const activePlace = this.state.activePlace;
    return (
    <div>
      <Navbar>
        <Navbar.Header>
          <Navbar.Brand>React Simple Weather App</Navbar.Brand>
        </Navbar.Header>
      </Navbar>
      <Grid>
        <Row>
          <Col md={4} sm={4}>
            <h4>Select a city</h4>
            <Nav bsStyle="pills" stacked activeKey={activePlace}
            onSelect={index => {this.setState({ activePlace: index });}}
            >
            {PLACES.map((place, index) => (
              <NavItem key={index} eventKey={index}> {place.name}</NavItem>
              ))}
            </Nav>
          </Col>
          <Col md={8} sm={8}>
            <WeatherDisplay key={activePlace} zip={PLACES[activePlace].zip}/>
          </Col>
        </Row>
      </Grid>
    </div>
  );
  }
}

export default App;
